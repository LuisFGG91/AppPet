{"ast":null,"code":"var _jsxFileName = \"/com.docker.devenvironments.code/src/context/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// UserContext.js\nimport React, { createContext, useContext, useReducer, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  user: null,\n  isLoading: true,\n  error: null\n};\nconst UserContext = /*#__PURE__*/createContext({\n  state: INITIAL_STATE,\n  dispatch: () => {}\n});\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.payload,\n        isLoading: false,\n        error: null\n      };\n    case \"CLEAR_USER\":\n      return {\n        ...state,\n        user: null,\n        isLoading: false\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n      x;\n    default:\n      return state;\n  }\n};\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n  const [someState, setSomeState] = useState(initialSomeState);\n  useEffect(() => {\n    // Comprobar la sesión de usuario al montar el componente\n    const fetchUser = async () => {\n      try {\n        console.log(\"Inicio de sesión\");\n        const response = await axios.get('http://localhost:8110/api/user/authenticate'); // Cambia la URL según tu endpoint\n        const user = response.data; // Ajusta según la estructura de tu respuesta\n        dispatch({\n          type: \"SET_USER\",\n          payload: user\n        });\n      } catch (error) {\n        dispatch({\n          type: \"CLEAR_USER\"\n        });\n      }\n    };\n    fetchUser();\n  }, [dispatch]);\n  const login = async (email, password, confirmPassword, navigate) => {\n    try {\n      if (email === '' || password === '') {\n        alert('Completar el formulario');\n        return;\n      }\n      const objLogin = {\n        email,\n        password,\n        confirmPassword\n      };\n      const user = await axios.post('http://localhost:8110/api/movie/login', objLogin);\n      if (user.data === false) {\n        alert('Mail o contraseña son incorrectos');\n        return;\n      }\n      console.log('User after sign in:', user);\n      console.log('User after sign in:', user.email);\n      dispatch({\n        type: \"SET_USER\",\n        payload: user\n      });\n      return {\n        user\n      };\n    } catch (error) {\n      console.error('Error in signIn function:', error);\n      dispatch({\n        type: \"SET_ERROR\",\n        payload: error.message\n      });\n      return {\n        error\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      state,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"ePXBVpYwqnYk4niNfMt/p1rLXGU=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useState","useEffect","axios","jsxDEV","_jsxDEV","INITIAL_STATE","user","isLoading","error","UserContext","state","dispatch","reducer","action","type","payload","x","UserProvider","children","_s","someState","setSomeState","initialSomeState","fetchUser","console","log","response","get","data","login","email","password","confirmPassword","navigate","alert","objLogin","post","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["/com.docker.devenvironments.code/src/context/UserContext.js"],"sourcesContent":["// UserContext.js\nimport React, { createContext, useContext, useReducer, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst INITIAL_STATE = {\n    user: null,\n    isLoading: true,\n    error: null\n};\n\nconst UserContext = createContext({\n    state: INITIAL_STATE,\n    dispatch: () => { }\n});\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.payload,\n                isLoading: false,\n                error: null\n            };\n        case \"CLEAR_USER\":\n            return {\n                ...state,\n                user: null,\n                isLoading: false\n            };\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                error: action.payload,\n                isLoading: false\n            };x\n        default:\n            return state;\n    }\n};\n\nexport const UserProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n    const [someState, setSomeState] = useState(initialSomeState);\n    useEffect(() => {\n        // Comprobar la sesión de usuario al montar el componente\n        const fetchUser = async () => {\n            try {\n                console.log(\"Inicio de sesión\");\n                const response = await axios.get('http://localhost:8110/api/user/authenticate');  // Cambia la URL según tu endpoint\n                const user = response.data;  // Ajusta según la estructura de tu respuesta\n                dispatch({ type: \"SET_USER\", payload: user });\n            } catch (error) {\n                dispatch({ type: \"CLEAR_USER\" });\n            }\n        };\n\n        fetchUser();\n    }, [dispatch]);\n\n    const login = async (email, password,confirmPassword, navigate) => {\n        try {\n            if (email === '' || password === '') {\n                alert('Completar el formulario');\n                return;\n            }\n            const objLogin = {\n                email,\n                password,\n                confirmPassword,\n            };\n            const user = await axios.post('http://localhost:8110/api/movie/login', objLogin);\n\n            if (user.data === false) {\n                alert('Mail o contraseña son incorrectos');\n                return;\n            }\n            \n            console.log('User after sign in:', user);\n            console.log('User after sign in:', user.email);\n            dispatch({ type: \"SET_USER\", payload: user });\n            return { user };\n        } catch (error) {\n            console.error('Error in signIn function:', error);\n            dispatch({ type: \"SET_ERROR\", payload: error.message });\n            return { error };\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{ state, login }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const useUser = () => {\n    const context = useContext(UserContext);\n    if (!context) {\n        throw new Error('useUser must be used within a UserProvider');\n    }\n    return context;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}